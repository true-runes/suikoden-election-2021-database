on: [push]
name: 幻水総選挙2021（データベース）
jobs:
  suikoden_election_2021_database_github_actions:
    name: GitHub Actions CI
    runs-on: ubuntu-latest
    container:
      image: ruby:3.1.2
      env:
        BUNDLE_PATH: vendor/bundle
        RAILS_ENV: test
        POSTGRES_HOST_TEST: postgres
        RAILS_DATABASE_USER: postgres
        RAILS_DATABASE_PASSWORD: postgres
    services:
      postgres:
        image: postgres:13.2
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER_TEST: root
          POSTGRES_PASSWORD_TEST: postgres
          POSTGRES_DB: suikoden_election_2021_test
        options:
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - name: Yarn のインストールを行う
        run: |
          curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
          echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
          apt-get update
          apt-get install -y yarn
      - name: Yarn のキャッシュのパスを取得する
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Yarn のキャッシュファイルを取得する
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Bundler の 最新版 を入れる
        run: |
          gem install bundler --no-document
      - name: RubyGems のキャッシュを復元する
        uses: actions/cache@v2
        id: rubygems-cache
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gem-
      - name: $ bundle install を行う
        run: |
          bundle config set --local path vendor/bundle
          bundle install --jobs 4 --retry 3
      - name: $ yarn install を行う
        run: |
          yarn install
      - name: $ bundle exec rails db:create を行う
        run: |
          bundle exec rails db:create
        env:
          POSTGRES_HOST_TEST: postgres
          RAILS_ENV: test
      - name: $ bundle exec rails db:migrate を行う
        run: |
          bundle exec rails db:migrate
        env:
          POSTGRES_HOST_TEST: postgres
          RAILS_ENV: test
      - name: $ bundle exec rails db:seed を行う
        run: |
          bundle exec rails db:seed
        env:
          POSTGRES_HOST_TEST: postgres
          RAILS_ENV: test
      - name: RSpec を実行する
        if: always()
        run: |
          bundle exec rspec
        env:
          POSTGRES_HOST_TEST: postgres
          RAILS_ENV: test
      - name: RuboCop を実行する
        if: always()
        run: |
          bundle exec rubocop -D -E -S -P
